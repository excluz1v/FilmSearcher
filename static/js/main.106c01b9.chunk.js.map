{"version":3,"sources":["APikeys.js","components/header/header.module.css","components/spinner/Spinner-1s-200px.svg","components/header/header.js","components/footer/footer.js","components/search/search.js","reducers/searchReducer.js","components/spinner/spinner.js","components/MovieContainer/MovieCard.js","components/MovieContainer/MovieContainer.js","components/landing/landing.js","store.js","components/MovieContainer/Movie.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","APIKey","Header","className","href","id","style","ul","Footer","target","Search","props","onsubmit","e","preventDefault","fetchdata","searchState","text","onChange","Search_Movie","value","type","name","placeholder","initialState","movies","loading","movie","Spinner","alt","src","spinner","width","margin","display","MovieCard","Poster","Title","Year","to","imdbID","MovieContainer","map","el","index","key","undefined","connect","state","payload","dispatch","axios","get","then","response","data","catch","error","console","log","middleware","thunk","reducers","combineReducers","action","store","createStore","composeWithDevTools","applyMiddleware","window","fetchMovie","useEffect","match","params","Genre","Type","Director","Actors","imdbRating","Plot","App","exact","path","component","Landing","Movie","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.106c01b9.chunk.js","sourcesContent":["module.exports = {\r\n    APIKey: \"cbc99f6e\"\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ul\":\"header_ul__35quP\"};","module.exports = __webpack_public_path__ + \"static/media/Spinner-1s-200px.579e532e.svg\";","import React from 'react'\r\nimport style from './header.module.css'\r\n\r\nexport default function Header() {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n            <a className=\"navbar-brand\" href=\"#\">MovieSeriesInfo</a>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\r\n                <ul className={`navbar-nav ${style.ul}`}>\r\n                    <li className=\"nav-item active display-4 \">\r\n                        <i className=\"fab fa-imdb\"></i>\r\n                    </li>\r\n                    {/* <li className=\"nav-item\">\r\n                    </li> */}\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <div className='row'>\r\n            <div className='col-12'>\r\n                <div className='footer p-3 mt-4 text-center bg-dark text-light'>\r\n                    Developer by :\r\n                    <span className='text-warning  font-weight-normal'>Dmitriy</span>\r\n                    , using <i className=\"fab fa-react\"></i> ReactJs &amp;Redux JS integrated with external movies data API\r\n                    <a href='http://www.omdbapi.com/' target=\"_blank\">  omdbapi</a>\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","\r\nimport React from 'react'\r\n\r\nexport default function Search(props) {\r\n\r\n    let onChange = (e) => {\r\n        return props.Search_Movie(e.target.value)\r\n    }\r\n    onsubmit = (e) => {\r\n        e.preventDefault();\r\n        props.fetchdata(props.searchState.text)\r\n    }\r\n    return (\r\n        <div className='jumbotron jumbotron-fluid mt-5 text-center'>\r\n            <div className='container'>\r\n                <h1 className='display-4 mb-3'>\r\n                    <i className='fa fa-search' />\r\n                    Search for a Movie, TV series..\r\n                </h1>\r\n                <form >\r\n                    <input className='form-control'\r\n                        onChange={onChange}\r\n                        value={props.searchState.text}\r\n                        type='text'\r\n                        name='seatchText'\r\n                        placeholder='Search for a Movie, TV series..'></input>\r\n                    <button className='btn btn-primary mt-3' >Search</button>\r\n\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import axios from 'axios'\r\nimport { APIKey } from '../APikeys'\r\n\r\nlet initialState = {\r\n    text: '',\r\n    movies: [],\r\n    loading: false,\r\n    movie: []\r\n}\r\n\r\nexport let searchReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case 'Search_Movie': {\r\n            return {\r\n                ...state,\r\n                text: action.payload,\r\n                loading: false\r\n            }\r\n        }\r\n        case 'fetchdata': {\r\n            return {\r\n                ...state,\r\n                movies: action.payload,\r\n            }\r\n        }\r\n        case 'fetchMovie': {\r\n            return {\r\n                ...state,\r\n                movie: action.payload,\r\n            }\r\n\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport let Search_Movie = (payload) => {\r\n    return { type: 'Search_Movie', payload }\r\n}\r\n\r\nexport let fetchdata = (text) => dispatch => {\r\n    axios.get(`https://www.omdbapi.com/?apikey=${APIKey}&s=${text}`).then(response => dispatch({\r\n        type: 'fetchdata',\r\n        payload: response.data.Search\r\n    })).catch(error => {\r\n        console.log(error)\r\n    })\r\n}\r\nexport let fetchMovie = (id) => dispatch => {\r\n\r\n    axios.get(`https://www.omdbapi.com/?apikey=${APIKey}&i=${id}`).then(response => dispatch({\r\n        type: 'fetchMovie',\r\n        payload: response.data\r\n    })).catch(error => {\r\n        console.log(error)\r\n    })\r\n}\r\n// axios.get(`http://www.omdbapi.com/?apikey=${APIKey}&i=tt0816692`).then(response => console.log(response))","import React from 'react'\r\nimport { spinner } from './Spinner-1s-200px.svg'\r\n\r\nexport default function Spinner() {\r\n    return (\r\n        <div>\r\n            <img alt=' ...loading' src={spinner}\r\n                style={{ width: '20rem', margin: 'auto', display: 'block' }} />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function MovieCard(props) {\r\n    // console.log(props)\r\n    return (\r\n        <div className=\"col-3 mb-5\"  >\r\n            <div className=' card card-body bg-dark text-center h-100'>\r\n                <img src={props.movies.Poster} className=\"w-100 mb-2\" alt=\"...\" />\r\n                <h5 className=\"card-title text-light\">{props.movies.Title}</h5>\r\n                <p className=\"card-text text-light\"> {props.movies.Year}</p>\r\n                <Link className='btn btn-primary' to={`/movie/${props.movies.imdbID}`}>\r\n                    <i className='fas fa-chevron-right' />\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport MovieCard from './MovieCard'\r\n\r\nexport default function MovieContainer(props) {\r\n    return (\r\n        <div className='row'>\r\n            {props.searchState.movies ?\r\n                props.searchState.movies.map((el, index) => {\r\n                    return < MovieCard key={index} movies={el} />\r\n                })\r\n\r\n                : undefined}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Search from '../search/search'\r\nimport { connect } from 'react-redux'\r\nimport { Search_Movie, fetchdata } from '../../reducers/searchReducer'\r\nimport Spinner from '../spinner/spinner'\r\nimport MovieContainer from '../MovieContainer/MovieContainer'\r\n\r\n\r\nfunction Landing(props) {\r\n\r\n    return (\r\n        <div className='container'>\r\n            <Search fetchdata={props.fetchdata} Search_Movie={props.Search_Movie} searchState={props.searchState} />\r\n            {props.searchState.loading ? <Spinner />\r\n                : <MovieContainer searchState={props.searchState} />}\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapStatetoProps = state => {\r\n    return {\r\n        searchState: state.movies\r\n    }\r\n}\r\n\r\nexport default connect(mapStatetoProps, { Search_Movie, fetchdata })(Landing)\r\n\r\n","import { createStore, applyMiddleware, combineReducers } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly'\r\nimport { searchReducer } from './reducers/searchReducer'\r\n\r\nconst middleware = [thunk]\r\n\r\nlet reducers = combineReducers({\r\n    movies: searchReducer\r\n})\r\nconst store = createStore(reducers, composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\n\r\nexport default store\r\n\r\nwindow.store = store\r\n\r\n","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { fetchMovie } from '../../reducers/searchReducer'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Movie(props) {\r\n\r\n    useEffect(() => {\r\n        props.fetchMovie(props.match.params.id)\r\n    }, [])\r\n    return (\r\n        <div className=\"container\"  >\r\n            <div className='row '>\r\n                <div className='col-4 card card-body'>\r\n                    <img src={props.movie.Poster} alt=\"poster\" />\r\n                </div>\r\n                <div className='col-8'>\r\n                    <ul className='list-group align-items-start'>\r\n                        <li className='list-group-item'>\r\n                            <strong>Title: </strong>{props.movie.Title}\r\n                        </li>\r\n                        <li className='list-group-item'>\r\n                            <strong>Genre: </strong>{props.movie.Genre}\r\n                        </li>\r\n                        <li className='list-group-item'>\r\n                            <strong>Title: </strong>{props.movie.Title}\r\n                        </li>\r\n                        <li className='list-group-item'>\r\n                            <strong>Year: </strong>{props.movie.Year}\r\n                        </li>\r\n                        <li className='list-group-item'>\r\n                            <strong>Type: </strong>{props.movie.Type}\r\n                        </li>\r\n                        <li className='list-group-item'>\r\n                            <strong>Director: </strong>{props.movie.Director}\r\n                        </li>\r\n                        <li className='list-group-item'>\r\n                            <strong>Actors: </strong>{props.movie.Actors}\r\n                        </li>\r\n                        <li className='list-group-item'>\r\n                            <strong>imdbRating: </strong>{props.movie.imdbRating}\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <div className='card card-body container bg-dark text-light'>\r\n                    <div className='col-12'>\r\n                        <h3> About</h3>\r\n                        {props.movie.Plot}\r\n                        <hr />\r\n                        <a className='btn btn-primary' target='_blank' href={`https://www.imdb.com/title/${props.match.params.id}`}>Read more at IMDB</a>\r\n                        <Link to='/' > get back to search</Link>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\nlet mapStateToprops = (state) => {\r\n    return {\r\n        movie: state.movies.movie\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToprops, { fetchMovie })(Movie)","import React from 'react';\nimport './App.css';\nimport Header from './components/header/header'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport Footer from './components/footer/footer';\nimport Landing from './components/landing/landing';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { HashRouter as Router, Route } from 'react-router-dom'\nimport Movie from './components/MovieContainer/Movie';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Provider store={store}>\n        <Router>\n          <div>\n            <Header />\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/movie/:id\" component={Movie} />\n            <Footer />\n          </div>\n        </Router>\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}